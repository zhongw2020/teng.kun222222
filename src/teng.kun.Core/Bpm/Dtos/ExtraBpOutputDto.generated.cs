// -----------------------------------------------------------------------
// <auto-generated>
//    此代码由代码生成器生成。
//    手动更改此文件可能导致应用程序出现意外的行为。
//    如果重新生成代码，对此文件的任何修改都会丢失。
//    如果需要扩展此类：可遵守如下规则进行扩展：
//      1.横向扩展：如需添加额外的属性，可新建文件“ExtraBpOutputDto.cs”的分部类“public partial class ExtraBpOutputDto”}添加属性
// </auto-generated>
//
//  <copyright file="ExtraBpOutputDto.generated.cs" company="teng.kun">
//      teng.kun
//  </copyright>
//  <site>http://teng.kun</site>
//  <last-editor>teng.kun</last-editor>
// -----------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

using OSharp.Entity;
using OSharp.Mapping;

using teng.kun.Bpm.Entities;

namespace teng.kun.Bpm.Dtos
{
    /// <summary>
    /// 输入DTO：加班流程信息
    /// </summary>
    [MapFrom(typeof(ExtraBp))]
    [Description("加班流程信息")]
    public partial class ExtraBpOutputDto : IOutputDto
    {
        /// <summary>
        /// 初始化一个<see cref="ExtraBpOutputDto"/>类型的新实例
        /// </summary>
        public ExtraBpOutputDto()
        { }

        /// <summary>
        /// 初始化一个<see cref="ExtraBpOutputDto"/>类型的新实例
        /// </summary>
        public ExtraBpOutputDto(ExtraBp entity)
        {
            Id = entity.Id;
            BpId = entity.BpId;
            BpTitle = entity.BpTitle;
            BpState = entity.BpState;
            BpSponsor = entity.BpSponsor;
            PrevNode = entity.PrevNode;
            CurrNode = entity.CurrNode;
            NextNode = entity.NextNode;
            Remark = entity.Remark;
            ExtraStartTime = entity.ExtraStartTime;
            ExtraEndTime = entity.ExtraEndTime;
            ExtraReason = entity.ExtraReason;
            CreatedTime = entity.CreatedTime;
        }

        /// <summary>
        /// 获取或设置 编号
        /// </summary>
        [DisplayName("编号")]
        public int Id { get; set; }

        /// <summary>
        /// 获取或设置 流程编码
        /// </summary>
        [DisplayName("流程编码")]
        public string BpId { get; set; }

        /// <summary>
        /// 获取或设置 标题
        /// </summary>
        [DisplayName("标题")]
        public string BpTitle { get; set; }

        /// <summary>
        /// 获取或设置 状态
        /// </summary>
        [DisplayName("状态")]
        public string BpState { get; set; }

        /// <summary>
        /// 获取或设置 发起人
        /// </summary>
        [DisplayName("发起人")]
        public string BpSponsor { get; set; }

        /// <summary>
        /// 获取或设置 上一节点
        /// </summary>
        [DisplayName("上一节点")]
        public int PrevNode { get; set; }

        /// <summary>
        /// 获取或设置 当前节点
        /// </summary>
        [DisplayName("当前节点")]
        public int CurrNode { get; set; }

        /// <summary>
        /// 获取或设置 下一节点
        /// </summary>
        [DisplayName("下一节点")]
        public int NextNode { get; set; }

        /// <summary>
        /// 获取或设置 备注
        /// </summary>
        [DisplayName("备注")]
        public string Remark { get; set; }

        /// <summary>
        /// 获取或设置 加班开始时间
        /// </summary>
        [DisplayName("加班开始时间")]
        public DateTime ExtraStartTime { get; set; }

        /// <summary>
        /// 获取或设置 加班结束时间
        /// </summary>
        [DisplayName("加班结束时间")]
        public DateTime ExtraEndTime { get; set; }

        /// <summary>
        /// 获取或设置 加班原因
        /// </summary>
        [DisplayName("加班原因")]
        public string ExtraReason { get; set; }

        /// <summary>
        /// 获取或设置 创建时间
        /// </summary>
        [DisplayName("创建时间")]
        public DateTime CreatedTime { get; set; }

    }
}
